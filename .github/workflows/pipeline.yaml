name: Publish Flags Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      # Checkout el c칩digo con historial suficiente
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      # Instala pnpm
      - name: Setup pnpm
        run: npm install -g pnpm

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Authenticate with npm
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      # Instala dependencias del monorepo
      - name: Install dependencies
        run: pnpm install

      # Incrementa la versi칩n autom치ticamente
      - name: Bump version
        id: bump_version
        run: |
          PACKAGE_PATH=packages/flags/package.json
          VERSION=$(jq -r '.version' $PACKAGE_PATH)
          NEW_VERSION=$(echo $VERSION | awk -F. -v OFS=. '{$NF++; print}')
          jq ".version = \"$NEW_VERSION\"" $PACKAGE_PATH > tmp.json && mv tmp.json $PACKAGE_PATH
          echo "New version: $NEW_VERSION"

      # Compila el paquete
      - name: Build the package
        run: pnpm run --filter packages/flags build

      # Publica en NPM
      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm publish packages/flags --access public

      # Confirma el cambio de versi칩n en git
      - name: Commit version bump
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add packages/flags/package.json
          git commit -m "ci: bump version to $NEW_VERSION"
          git push origin main
